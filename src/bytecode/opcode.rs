#[repr(u8)]
enum Opcode {
    Aaload = 0x32,
    Aastore = 0x53,
    AconstNull = 0x01,
    Aload = 0x19,
    Aload0 = 0x2a,
    Aload1 = 0x2b,
    Aload2 = 0x2c,
    Aload3 = 0x2d,
    AnewArray = 0xbd,
    Areturn = 0xb0,
    ArrayLength = 0xbe,
    Astore = 0x3a,
    Astore0 = 0x4b,
    Astore1 = 0x4c,
    Astore2 = 0x4d,
    Astore3 = 0x4e,
    Athrow = 0xbf,
    Baload = 0x33,
    Bastore = 0x54,
    Bipush = 0x10,
    Caload = 0x34,
    Castore = 0x55,
    Checkcast = 0xc0,
    D2f = 0x90,
    D2i = 0x8e,
    D2l = 0x8f,
    Dadd = 0x63,
    Daload = 0x31,
    Dastore = 0x52,
    Dcmpg = 0x98,
    Dcmpl = 0x97,
    Dconst0 = 0xe,
    Dconst1 = 0xf,
    Ddiv = 0x6f,
    Dload = 0x18,
    Dload0 = 0x26,
    Dload1 = 0x27,
    Dload2 = 0x28,
    Dload3 = 0x29,
    Dmul = 0x6b,
    Dneg = 0x77,
    Drem = 0x73,
    Dreturn = 0xaf,
    Dstore = 0x39,
    Dstore0 = 0x47,
    Dstore1 = 0x48,
    Dstore2 = 0x49,
    Dstore3 = 0x4a,
    Dsub = 0x67,
    Dup = 0x59,
    DupX1 = 0x5a,
    DupX2 = 0x5b,
    Dup2 = 0x5c,
    Dup2X1 = 0x5d,
    Dup2X2 = 0x5e,
    F2d = 0x8d,
    F2i = 0x8b,
    F2l = 0x8c,
    Fadd = 0x62,
    Faload = 0x30,
    Fastore = 0x51,
    Fcmpg = 0x96,
    Fcmpl = 0x95,
    Fconst0 = 0xb,
    Fconst1 = 0xc,
    Fconst2 = 0xd,
    Fdiv = 0x6e,
    Fload = 0x17,
    Fload0 = 0x22,
    Fload1 = 0x23,
    Fload2 = 0x24,
    Fload3 = 0x25,
    Fmul = 0x6a,
    Fneg = 0x76,
    Frem = 0x72,
    Freturn = 0xae,
    Fstore = 0x38,
    Fstore0 = 0x43,
    Fstore1 = 0x44,
    Fstore2 = 0x45,
    Fstore3 = 0x46,
    Fsub = 0x66,
    Getfield = 0xb4,
    Getstatic = 0xb2,
    Goto = 0xa7,
    Gotow = 0xc8,
    I2b = 0x91,
    I2c = 0x92,
    I2d = 0x87,
    I2f = 0x86,
    I2l = 0x85,
    I2s = 0x93,
    Iadd = 0x60,
    Iaload = 0x2e,
    Iand = 0x7e,
    Iastore = 0x4f,
    IconstM1 = 0x2,
    Iconst0 = 0x3,
    Iconst1 = 0x4,
    Iconst2 = 0x5,
    Iconst3 = 0x6,
    Iconst4 = 0x7,
    Iconst5 = 0x8,
    Idiv = 0x6c,
    IfAcmpeq = 0xa5,
    IfAcmpne = 0xa6,
    IfIcmpeq = 0x9f,
    IfIcmpne = 0xa0,
    IfIcmpit = 0xa1,
    IfIcmpge = 0xa2,
    IfIcmpgt = 0xa3,
    IfIcmple = 0xa4,
    Ifeq = 0x99,
    Ifne = 0x9a,
    Ifit = 0x9b,
    Ifge = 0x9c,
    Ifgt = 0x9d,
    Ifle = 0x9e,
    Ifnonnull = 0xc7,
    Ifnull = 0xc6,
    IInc = 0x84,
    Iload = 0x15,
    Iload0 = 0x1a,
    Iload1 = 0x1b,
    Iload2 = 0x1c,
    Iload3 = 0x1d,
    Imul = 0x68,
    Ineg = 0x74,
    Instanceof = 0xc1,
    Invokedynamic = 0xba,
    Invokeinterface = 0xb9,
    Invokespecial = 0xb7,
    Invokestatic = 0xb8,
    Invokevirtual = 0xb6,
    Ior = 0x80,
    Irem = 0x70,
    Ireturn = 0xac,
    Ishl = 0x78,
    Ishr = 0x7a,
    Istore = 0x36,
    Istore0 = 0x3b,
    Istore1 = 0x3c,
    Istore2 = 0x3d,
    Istore3 = 0x3e,
    Isub = 0x64,
    Iushr = 0x7c,
    Ixor = 0x82,
    Jsr = 0xa8,
    Jsrw = 0xc9,
    L2d = 0x8a,
    L2f = 0x89,
    L2i = 0x88,
    Ladd = 0x61,
    Laload = 0x2f,
    Land = 0x7f,
    Lastore = 0x50,
    Lcmp = 0x94,
    Lconst0 = 0x9,
    Lconst1 = 0xa,
    Ldc = 0x12,
    Ldcw = 0x13,
    Ldc2w = 0x14,
    Ldiv = 0x6d,
    Lload = 0x16,
    Lload0 = 0x1e,
    Lload1 = 0x1f,
    Lload2 = 0x20,
    Lload3 = 0x21,
    Lmul = 0x69,
    Lneg = 0x75,
    Lookupswitch = 0xab,
    Lor = 0x81,
    Lrem = 0x71,
    Lreturn = 0xad,
    Lshl = 0x79,
    Lshr = 0x7b,
    Lstore = 0x37,
    Lstore0 = 0x3f,
    Lstore1 = 0x40,
    Lstore2 = 0x41,
    Lstore3 = 0x42,
    Lsub = 0x65,
    Lushr = 0x7d,
    Lxor = 0x83,
    Monitorenter = 0xc2,
    Monitorexit = 0xc3,
    Multianewarray = 0xc5,
    New = 0xbb,
    Newarray = 0xbc,
    Nop = 0x00,
    Pop = 0x57,
    Pop2 = 0x58,
    Putfield = 0xb5,
    Putstatic = 0xb3,
    Ret = 0xa9,
    Return = 0xb1,
    Saload = 0x35,
    Sastore = 0x56,
    Sipush = 0x11,
    Swap = 0x5f,
    Tableswitch = 0xaa,
    Wide = 0xc4,
}

#[derive(Debug)]
struct InvalidOpcode {
    pub opcode: u8,
}

impl TryFrom<u8> for Opcode {
    type Error = InvalidOpcode;

    fn try_from(value: u8) -> Result<Self, Self::Error> {
        match value {
            0x32 => Ok(Opcode::Aaload),
            0x53 => Ok(Opcode::Aastore),
            0x01 => Ok(Opcode::AconstNull),
            0x19 => Ok(Opcode::Aload),
            0x2a => Ok(Opcode::Aload0),
            0x2b => Ok(Opcode::Aload1),
            0x2c => Ok(Opcode::Aload2),
            0x2d => Ok(Opcode::Aload3),
            0xbd => Ok(Opcode::AnewArray),
            0xb0 => Ok(Opcode::Areturn),
            0xbe => Ok(Opcode::ArrayLength),
            0x3a => Ok(Opcode::Astore),
            0x4b => Ok(Opcode::Astore0),
            0x4c => Ok(Opcode::Astore1),
            0x4d => Ok(Opcode::Astore2),
            0x4e => Ok(Opcode::Astore3),
            0xbf => Ok(Opcode::Athrow),
            0x33 => Ok(Opcode::Baload),
            0x54 => Ok(Opcode::Bastore),
            0x10 => Ok(Opcode::Bipush),
            0x34 => Ok(Opcode::Caload),
            0x55 => Ok(Opcode::Castore),
            0xc0 => Ok(Opcode::Checkcast),
            0x90 => Ok(Opcode::D2f),
            0x8e => Ok(Opcode::D2i),
            0x8f => Ok(Opcode::D2l),
            0x63 => Ok(Opcode::Dadd),
            0x31 => Ok(Opcode::Daload),
            0x52 => Ok(Opcode::Dastore),
            0x98 => Ok(Opcode::Dcmpg),
            0x97 => Ok(Opcode::Dcmpl),
            0x0e => Ok(Opcode::Dconst0),
            0x0f => Ok(Opcode::Dconst1),
            0x6f => Ok(Opcode::Ddiv),
            0x18 => Ok(Opcode::Dload),
            0x26 => Ok(Opcode::Dload0),
            0x27 => Ok(Opcode::Dload1),
            0x28 => Ok(Opcode::Dload2),
            0x29 => Ok(Opcode::Dload3),
            0x6b => Ok(Opcode::Dmul),
            0x77 => Ok(Opcode::Dneg),
            0x73 => Ok(Opcode::Drem),
            0xaf => Ok(Opcode::Dreturn),
            0x39 => Ok(Opcode::Dstore),
            0x47 => Ok(Opcode::Dstore0),
            0x48 => Ok(Opcode::Dstore1),
            0x49 => Ok(Opcode::Dstore2),
            0x4a => Ok(Opcode::Dstore3),
            0x67 => Ok(Opcode::Dsub),
            0x59 => Ok(Opcode::Dup),
            0x5a => Ok(Opcode::DupX1),
            0x5b => Ok(Opcode::DupX2),
            0x5c => Ok(Opcode::Dup2),
            0x5d => Ok(Opcode::Dup2X1),
            0x5e => Ok(Opcode::Dup2X2),
            0x8d => Ok(Opcode::F2d),
            0x8b => Ok(Opcode::F2i),
            0x8c => Ok(Opcode::F2l),
            0x62 => Ok(Opcode::Fadd),
            0x30 => Ok(Opcode::Faload),
            0x51 => Ok(Opcode::Fastore),
            0x96 => Ok(Opcode::Fcmpg),
            0x95 => Ok(Opcode::Fcmpl),
            0x0b => Ok(Opcode::Fconst0),
            0x0c => Ok(Opcode::Fconst1),
            0x0d => Ok(Opcode::Fconst2),
            0x6e => Ok(Opcode::Fdiv),
            0x17 => Ok(Opcode::Fload),
            0x22 => Ok(Opcode::Fload0),
            0x23 => Ok(Opcode::Fload1),
            0x24 => Ok(Opcode::Fload2),
            0x25 => Ok(Opcode::Fload3),
            0x6a => Ok(Opcode::Fmul),
            0x76 => Ok(Opcode::Fneg),
            0x72 => Ok(Opcode::Frem),
            0xae => Ok(Opcode::Freturn),
            0x38 => Ok(Opcode::Fstore),
            0x43 => Ok(Opcode::Fstore0),
            0x44 => Ok(Opcode::Fstore1),
            0x45 => Ok(Opcode::Fstore2),
            0x46 => Ok(Opcode::Fstore3),
            0x66 => Ok(Opcode::Fsub),
            0xb4 => Ok(Opcode::Getfield),
            0xb2 => Ok(Opcode::Getstatic),
            0xa7 => Ok(Opcode::Goto),
            0xc8 => Ok(Opcode::Gotow),
            0x91 => Ok(Opcode::I2b),
            0x92 => Ok(Opcode::I2c),
            0x87 => Ok(Opcode::I2d),
            0x86 => Ok(Opcode::I2f),
            0x85 => Ok(Opcode::I2l),
            0x93 => Ok(Opcode::I2s),
            0x60 => Ok(Opcode::Iadd),
            0x2e => Ok(Opcode::Iaload),
            0x7e => Ok(Opcode::Iand),
            0x4f => Ok(Opcode::Iastore),
            0x02 => Ok(Opcode::IconstM1),
            0x03 => Ok(Opcode::Iconst0),
            0x04 => Ok(Opcode::Iconst1),
            0x05 => Ok(Opcode::Iconst2),
            0x06 => Ok(Opcode::Iconst3),
            0x07 => Ok(Opcode::Iconst4),
            0x08 => Ok(Opcode::Iconst5),
            0x6c => Ok(Opcode::Idiv),
            0xa5 => Ok(Opcode::IfAcmpeq),
            0xa6 => Ok(Opcode::IfAcmpne),
            0x9f => Ok(Opcode::IfIcmpeq),
            0xa0 => Ok(Opcode::IfIcmpne),
            0xa1 => Ok(Opcode::IfIcmpit),
            0xa2 => Ok(Opcode::IfIcmpge),
            0xa3 => Ok(Opcode::IfIcmpgt),
            0xa4 => Ok(Opcode::IfIcmple),
            0x99 => Ok(Opcode::Ifeq),
            0x9a => Ok(Opcode::Ifne),
            0x9b => Ok(Opcode::Ifit),
            0x9c => Ok(Opcode::Ifge),
            0x9d => Ok(Opcode::Ifgt),
            0x9e => Ok(Opcode::Ifle),
            0xc7 => Ok(Opcode::Ifnonnull),
            0xc6 => Ok(Opcode::Ifnull),
            0x84 => Ok(Opcode::IInc),
            0x15 => Ok(Opcode::Iload),
            0x1a => Ok(Opcode::Iload0),
            0x1b => Ok(Opcode::Iload1),
            0x1c => Ok(Opcode::Iload2),
            0x1d => Ok(Opcode::Iload3),
            0x68 => Ok(Opcode::Imul),
            0x74 => Ok(Opcode::Ineg),
            0xc1 => Ok(Opcode::Instanceof),
            0xba => Ok(Opcode::Invokedynamic),
            0xb9 => Ok(Opcode::Invokeinterface),
            0xb7 => Ok(Opcode::Invokespecial),
            0xb8 => Ok(Opcode::Invokestatic),
            0xb6 => Ok(Opcode::Invokevirtual),
            0x80 => Ok(Opcode::Ior),
            0x70 => Ok(Opcode::Irem),
            0xac => Ok(Opcode::Ireturn),
            0x78 => Ok(Opcode::Ishl),
            0x7a => Ok(Opcode::Ishr),
            0x36 => Ok(Opcode::Istore),
            0x3b => Ok(Opcode::Istore0),
            0x3c => Ok(Opcode::Istore1),
            0x3d => Ok(Opcode::Istore2),
            0x3e => Ok(Opcode::Istore3),
            0x64 => Ok(Opcode::Isub),
            0x7c => Ok(Opcode::Iushr),
            0x82 => Ok(Opcode::Ixor),
            0xa8 => Ok(Opcode::Jsr),
            0xc9 => Ok(Opcode::Jsrw),
            0x8a => Ok(Opcode::L2d),
            0x89 => Ok(Opcode::L2f),
            0x88 => Ok(Opcode::L2i),
            0x61 => Ok(Opcode::Ladd),
            0x2f => Ok(Opcode::Laload),
            0x7f => Ok(Opcode::Land),
            0x50 => Ok(Opcode::Lastore),
            0x94 => Ok(Opcode::Lcmp),
            0x09 => Ok(Opcode::Lconst0),
            0x0a => Ok(Opcode::Lconst1),
            0x12 => Ok(Opcode::Ldc),
            0x13 => Ok(Opcode::Ldcw),
            0x14 => Ok(Opcode::Ldc2w),
            0x6d => Ok(Opcode::Ldiv),
            0x16 => Ok(Opcode::Lload),
            0x1e => Ok(Opcode::Lload0),
            0x1f => Ok(Opcode::Lload1),
            0x20 => Ok(Opcode::Lload2),
            0x21 => Ok(Opcode::Lload3),
            0x69 => Ok(Opcode::Lmul),
            0x75 => Ok(Opcode::Lneg),
            0xab => Ok(Opcode::Lookupswitch),
            0x81 => Ok(Opcode::Lor),
            0x71 => Ok(Opcode::Lrem),
            0xad => Ok(Opcode::Lreturn),
            0x79 => Ok(Opcode::Lshl),
            0x7b => Ok(Opcode::Lshr),
            0x37 => Ok(Opcode::Lstore),
            0x3f => Ok(Opcode::Lstore0),
            0x40 => Ok(Opcode::Lstore1),
            0x41 => Ok(Opcode::Lstore2),
            0x42 => Ok(Opcode::Lstore3),
            0x65 => Ok(Opcode::Lsub),
            0x7d => Ok(Opcode::Lushr),
            0x83 => Ok(Opcode::Lxor),
            0xc2 => Ok(Opcode::Monitorenter),
            0xc3 => Ok(Opcode::Monitorexit),
            0xc5 => Ok(Opcode::Multianewarray),
            0xbb => Ok(Opcode::New),
            0xbc => Ok(Opcode::Newarray),
            0x00 => Ok(Opcode::Nop),
            0x57 => Ok(Opcode::Pop),
            0x58 => Ok(Opcode::Pop2),
            0xb5 => Ok(Opcode::Putfield),
            0xb3 => Ok(Opcode::Putstatic),
            0xa9 => Ok(Opcode::Ret),
            0xb1 => Ok(Opcode::Return),
            0x35 => Ok(Opcode::Saload),
            0x56 => Ok(Opcode::Sastore),
            0x11 => Ok(Opcode::Sipush),
            0x5f => Ok(Opcode::Swap),
            0xaa => Ok(Opcode::Tableswitch),
            0xc4 => Ok(Opcode::Wide),
            other => Err(InvalidOpcode { opcode: other }),
        }
    }
}
